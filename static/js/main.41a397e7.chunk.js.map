{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","borderTop","height","children","App","onSearchChange","event","setState","searchfiled","target","value","state","fetch","response","json","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","document","getElementById"],"mappings":"kKAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,0CCMCQ,EAXF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,cACrB,gCACE,6BAAKC,IACL,4BAAIC,WCWGI,EAhBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BACGA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,cAAC,EAAD,CAEEV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,SCKFC,EAZG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKT,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCMHI,EAbA,SAACC,GACd,OACE,qBACEC,MAAO,CACLC,SAAU,SACVC,UAAW,kBACXC,OAAQ,SAJZ,SAOGJ,EAAMK,YC8BEC,E,kDAlCb,aAAe,IAAD,8BACZ,gBAWFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAX1C,EAAKC,MAAQ,CACXvB,OAAQ,GACRoB,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBI,MAAM,8CACHtC,MAAK,SAACuC,GAAD,OAAcA,EAASC,UAC5BxC,MAAK,SAACgB,GAAD,OAAU,EAAKiB,SAAS,CAAEnB,OAAQE,S,oBAK5C,WACE,MAAgCyB,KAAKJ,MAA7BvB,EAAR,EAAQA,OAAQoB,EAAhB,EAAgBA,YACVQ,EAAiB5B,EAAO6B,QAAO,SAACC,GACpC,OAAOA,EAAMpC,KAAKqC,cAAcC,SAASZ,EAAYW,kBAEvD,OAAQ/B,EAAOiC,OAGb,sBAAKrC,UAAU,KAAf,UACE,8CACA,cAAC,EAAD,CAAWS,aAAcsB,KAAKV,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUjB,OAAQ4B,SANtB,oBAAIhC,UAAU,KAAd,yB,GAtBYsC,aCClBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDvD,M","file":"static/js/main.41a397e7.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nconst Card = ({ id, name, email }) => {\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa2 ma2 grow bw2 shadow-5\">\r\n      <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div>\r\n      {robots.map((user, i) => {\r\n        return (\r\n          <Card\r\n            key={i}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"Search Robots\"\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflow: \"scroll\",\r\n        borderTop: \"1px solid black\",\r\n        height: \"800px\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\nexport default Scroll;\r\n","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport \"tachyons\";\r\nimport Scroll from \"../components/Scroll\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfiled: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((user) => this.setState({ robots: user }));\r\n  }\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfiled: event.target.value });\r\n  };\r\n  render() {\r\n    const { robots, searchfiled } = this.state;\r\n    const filteredRobots = robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(searchfiled.toLowerCase());\r\n    });\r\n    return !robots.length ? (\r\n      <h1 className=\"tc\">Loading</h1>\r\n    ) : (\r\n      <div className=\"tc\">\r\n        <h1>Robo friends</h1>\r\n        <SearchBox searchChange={this.onSearchChange} />\r\n        <Scroll>\r\n          <CardList robots={filteredRobots} />\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\nimport App from \"./containers/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}